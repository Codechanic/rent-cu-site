{% block main %}
    
 {% set locale = app.request.locale %} 
{% if type == 'long' %}

<script type="text/javascript">


    $(document).ready(function(){

    function getId() { return "{{id}}"; };
            function getWrapper() { return  "#{{id}}_wrapper"; };
            var s = getWrapper();
            var multiple = {% if multiple %} true {% else %} false {% endif %};
            var multiple_rawhtml = '';
        {% if multiple %}
    var multiple_rawhtml = '\
<div class="btn-group pull-right">                  \
<label class="dataTables_multiple">\
                    <span style="left:0 40px 0 0px;">\
                        {{'datatable.common.execute' | trans}}\
                        <select name="dataTables[select]">\
                            {% for key,item in multiple %}\
                            <option value="{{ path(item.route) }}">{{item.title}}</option>\
                            {% endfor %}\
                        </select>\
                        <button class="btn {{color_button_multiple}} btn-datatable-multiple" style="margin-left: 10px;">Execute</button>\
                    <span>\
                    </label>\
</div>';
        {% endif %}
    var $js_conf = {{ js_conf | raw }};
            var $js = {};
            for (key in $js_conf) {
    if ($js_conf.hasOwnProperty(key)) {
    eval (' $js["' + key + '"] = ' + $js_conf[key] + ' ; ');
    }
    }
    var $options = {{ js | raw }};
            var $aoColumnDefs = new Array();
        {% if multiple %}
    $aoColumnDefs.push({ 'bSortable': false, 'aTargets': [ 0 ] });
        {% endif %}
        {% if action and not action_twig %}
    $aoColumnDefs.push({
    "fnRender": function (oObj) {
    var $edit_url = strtr(
            "{{ path("admin_"~module~"_edit" , { 'id': "xx" }) }}",
    { "xx": {% if multiple %} oObj.aData[{{fields|length}}]{%else%}oObj.aData[{{fields|length}} - 1]{% endif %} }
    );
            var $link_edit = "<a title=\"{{ 'admin.action.edit'|trans()}}\" action='ajax-modal' ";
            $link_edit += "href='" + $edit_url + "'><i class=\"icon-edit\"></i></a>";
           // $link_edit += "{{ 'admin.action.edit'|trans()}}";
            var $delete_url = strtr(
                    "{{ path("admin_"~module~"_delete", { 'id': "xx" }) }}",
            { "xx": {% if multiple %} oObj.aData[{{fields|length}}]{%else%}oObj.aData[{{fields|length}} - 1]{% endif %} }
            );
            var $link_delete = "<a  title=\"{{ 'admin.action.delete'|trans()}}\" href='" + $delete_url + "' action=delete><i class=\"icon-remove\"></i></a>";
            var $show_url = strtr(
                    "{{ path("admin_"~module~"_show", { 'id': "xx" }) }}",
            { "xx": {% if multiple %} oObj.aData[{{fields|length}}]{%else%}oObj.aData[{{fields|length}} - 1]{% endif %} });
            var $link_show = "<a  title=\"{{ 'admin.action.show'|trans()}}\" action='ajax-modal' id=\"edit\"";
            $link_show += "href='" + $show_url + "'><i class=\"icon-eye-open\"></i></a>";
           // $link_show += "{{ 'admin.action.show'|trans()}}</a>";
            var $out = $link_delete + " " + $link_edit + " " + $link_show;
    // TODO if the last field is null hide action fields (why)        
    //if (oObj.aData[{{fields|length}} - 1] == null)
    //{
    //$out = "<div style='float:right'>{{ 'admin.action.no_action'|trans() }}</div>";
    //}
    return $out
    },
            "aTargets": [ multiple ? {{fields|length}} : ({{fields|length}} - 1)  ]
    });
        {% endif %}
    var $defaults = {
    
            "sPaginationType": "full_numbers",
            "aLengthMenu": [[5, 10, 25, 50, - 1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 10,
            "bServerSide": true,
            "bProcessing": false,
            "sAjaxSource": null,
            "bPaginate": true,
            "sPaginationType": "bootstrap",
            {% if sort %}
    "aaSorting": [[ {{sort[0]}}, "{{sort[1]}}" ]],
            {% endif %}
    "bLengthChange": true,
            "aoColumnDefs": $aoColumnDefs,
            "fnDrawCallback": function(oSettings) {
            var s = getWrapper();
                    if (multiple && $('.dataTables_multiple', $(s)).length == 0){
                         $(s + ' .dataTables_length').prepend(multiple_rawhtml);
                         $('select').select2({
                            placeholder: "Select",
                            allowClear: true
                          });
                         
            }
            },
            "bSort": true,
            "bFilter": {% if search %} true {% else %} false {% endif %},
            "oLanguage": {
            "sProcessing":     '{{ 'datatable.common.sProcessing' | trans() }}',
                    "sLengthMenu":     '{{ 'datatable.common.sLengthMenu' | trans() }}',
                    "sZeroRecords":    '{{ 'datatable.common.sZeroRecords' | trans() }}',
                    "sInfo":           '{{ 'datatable.common.sInfo' | trans() }}',
                    "sInfoEmpty":      '{{ 'datatable.common.sInfoEmpty' | trans() }}',
                    "sInfoFiltered":   '{{ 'datatable.common.sInfoFiltered' | trans() }}',
                    "sInfoPostFix":    '{{ 'datatable.common.sInfoPostFix' | trans() }}',
                    "sSearch":         '{{ 'datatable.common.sSearch' | trans() }}',
                    "sLoadingRecords": '{{ 'datatable.common.sLoadingRecords' | trans() }}',
                    "sUrl":            "",
                    "oPaginate": {
                    "sFirst":    '{{ 'datatable.common.sFirst' | trans() }}',
                            "sPrevious": '{{ 'datatable.common.sPrevious' | trans() }}',
                            "sNext":     '{{ 'datatable.common.sNext' | trans() }}',
                            "sLast":     '{{ 'datatable.common.sLast' | trans() }}'
                    }
            },
            "bAutoWidth" : false
    };
            $.extend($defaults, $js);
            $.extend($defaults, $options);
            $('#{{id}}').trigger('datatables_init', $defaults);
            eval("var " + "oTable_" + '{{id}}'.split('-').join('_') + "  = $('#{{id}}').dataTable($defaults)");
                   var UIModals_{{ module }} = function() {

            var initModals_{{ module }} = function() {
            $.fn.modalmanager.defaults.resize = true;
                    $.fn.modalmanager.defaults.spinner = '<div class="loading-spinner fade" style="width: 200px; margin-left: -100px;"><img src="{{ asset('bundles/admin/img/ajax-modal-loading.gif') }}" align="middle">&nbsp;<span style="font-weight:300; color: #eee; font-size: 18px; font-family:Open Sans;">&nbsp;Loading...</div>';
                    var $modal = $('#{{ module }}-modal');
                    $(s).on('click', 'a[action=ajax-modal]', function(e){

            e.preventDefault();
                    var url = $(this).attr('href');
                    // create the backdrop and wait for next modal to be triggered
                    $('body').modalmanager('loading');
                    setTimeout(function() {
                    $modal.load(url, '', function() {
                    $modal.modal();
                    });
                    }, 500);
            });
            };
                    return {
                    //main function to initiate the module
                    init: function() {
                    initModals_{{ module }}();
                    }

                    };
            }();
            UIModals_{{ module }}.init();
             
            $(s).on('click', 'a[action=delete]', function(e){
    e.preventDefault();
            if (confirm('Are you sure ?')) {
    $.ajax({
    type: 'delete',
            dataType: 'json',
            url: $(this).attr("href"),
            success: function(response) {
            if (response.success) {
            $('#' + getId()).dataTable().fnDraw();
           toastr['success'](response.message);
            } else {
            toastr['error'](response.error.message);
            }
            }
    });
    }
    });
    $('#sample_2_column_toggler input[type="checkbox"]').change(function(){
            /* Get the DataTables object again - this is not a recreation, just a get of the object */
            var iCol = parseInt($(this).attr("data-column"));
            var bVis = $('#' + getId()).dataTable().fnSettings().aoColumns[iCol].bVisible;
            $('#' + getId()).dataTable().fnSetColumnVis(iCol, (bVis ? false : true));
            if(bVis){
            $(this).parent().removeClass('checked');}else{
            $(this).parent().addClass('checked')
            }
            
        });
    
    
            if (multiple === true) {
    var chbox = 'input:checkbox[name="dataTables[actions][]"]';
            var chbox_all = 'input:checkbox[name="datatable_action_all"]';
            $(s).on('click', '.btn-datatable-multiple:not(.search_init)', function(e){
    if ($('input:focus', $(s)).length > 0){
    return false;
    }
    e.preventDefault();
            if ($(chbox + ':checked').length > 0){
    if (!confirm('Are you sure ?')) {
    return false;
    }
    var form = $(this).parents('form:eq(0)');
            var action = $('select[name="dataTables[select]"]', $(s)).val();
            $.ajax({
            type: "POST",
                    url: action,
                    data: form.serialize(),
                    success: function(msg) {
                    $('#' + getId()).dataTable().fnDraw();
                            var container = $('#admin-entity-viewer');
                            App.blockUI(container, false);
                            App.unblockUI(container);
                    },
                    beforeSend: function() {
                    var container = $('#admin-entity-viewer');
                            App.blockUI(container, false);
                            App.unblockUI(container);
                    }
            });
    } else {
    alert('You need to select at least one element.');
    }
    });
   
            $(s).on('click', chbox_all, function(e){
    var set = jQuery(this).attr("data-set");
            if ($(this).is(':checked')) {
    $(chbox, $(s)).attr("checked", false).click();
            jQuery.uniform.update(set);
    } else {
    $(chbox, $(s)).attr("checked", true).click();
            jQuery.uniform.update(set);
    }
    });
    }

    {% if search %}
    $(".dataTables_filter").remove();
            var search_selector = "#{{id}} input[searchable=true]";
            $(search_selector).keypress(function (event) {
    var index = $(this).attr('index');
            var oTable = eval('oTable_{{id}}'.split('-').join('_'));
            if (event.keyCode == '13') {
    oTable.fnFilter(
            this.value,
            oTable.oApi._fnVisibleToColumnIndex(
                    oTable.fnSettings(),
                    index
                    )
            );
    }
    }).each(function (i) {
    this.initVal = this.value;
    }).focus(function () {
    if (this.className == "search_init"){
    this.className = "form-control";
            this.value = "";
    }
    }).blur(function (i) {
    if (this.value == ""){
    this.className = "search_init form-control";
            this.value = this.initVal;
    }
    });
        {% endif %}
    });</script>

{% if multiple %}
<div id="div-{{id}}">
<form name="frm-{{id}}">
{% endif %}
    <table class="table table-striped table-bordered table-hover" id="{{id}}"> 
        <thead> 
            <tr> 
            {% if multiple %}
                <th class="table-checkbox"><input type="checkbox" class="group-checkable" name="datatable_action_all" /></th>
            {% endif %}
            {% for label,key in fields %}
                {% if label != '_identifier_' %}
                <th>{{ label | trans()}}</th>
                {% endif %}
            {% endfor %}
            {% if action %}
                <th>{{ 'admin.action.actions'|trans()  }}</th>
            {% endif %}
            </tr> 
        </thead>
        {% if search %}
        {% set i = 0 %}
        <tfoot>
            <tr>
                {% if multiple %}
                <th></th>
                {% endif %}
                {% for label,key in fields %}
                    {% if label != '_identifier_' %}
                        {% if search_fields is not empty %}
                            {% if i in search_fields %}
                <td><input index="{{i}}" searchable="true" type="text" placeholder="{{ 'admin.search'|trans() }}" class="search_init form-control" /></td>
                            {% else %}
                <td></td>
                            {% endif %}
                        {% else %}
                <td><input index="{{i}}" searchable="true" type="text" placeholder="{{ 'admin.search'|trans() }}" class="search_init form-control" /></td>
                        {% endif %}
                    {% elseif label == '_identifier_'and action and not action_twig %}
                <td></td>
                    {% endif %}
                    {% set i = i+1 %}
                {% endfor %}
            </tr>
        </tfoot>
        {% endif %}
    </table>
{% if multiple %}
</form>
</div>
{% endif %}
{%else%}

<table class="table table-hover flip-content table-striped" id="{{ id }}" style="cursor: pointer;">
    <thead> 
        <tr>
           {% for label,key in fields %}
                {% if label != '_identifier_' %}
                    <th>{{ label | trans()}}</th>
                {% endif %}
                {% endfor %}
        </tr>
    </thead>
         {% if search %}
        {% set i = 0 %}
    <tfoot>
        <tr>               
                        {% if search_field is defined %}                            
            <td>
                <div class="input-icon left">
                    <i class="icon-search"></i>

                    <input class="form-control" index="{{search_field}}" searchable="true" type="text" placeholder="{{ 'admin.search'|trans() }}" />
                </div>

            </td>  
                        {% endif %}
        </tr>
    </tfoot>
        {% endif %}
</table>
 
<script type="text/javascript">
            $(document).ready(function() {
    $options = {{ js | raw }}

    $defaults = {    
            "sPaginationType": "full_numbers",
            "aLengthMenu": [[5, 10, 25, 50, - 1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 10,
            "bServerSide": true,
            "bProcessing": false,
            "sAjaxSource": null,
            "bPaginate": true,
            "bLengthChange": true,
            "bSort": true,
             {% if sort %}
    "aaSorting": [[ {{sort[0]}}, "{{sort[1]}}" ]],
            {% endif %}
    "bFilter": {% if search %} true {% else %} false {% endif %},
            "oLanguage": {
            "sProcessing": '{{'datatable.common.sProcessing' | trans}}',
                    "sLengthMenu": '{{'datatable.common.sLengthMenu' | trans}}',
                    "sZeroRecords": '{{'datatable.common.sZeroRecords' | trans}}',
                    "sInfo": '{{'datatable.common.sInfo' | trans}}',
                    "sInfoEmpty": '{{'datatable.common.sInfoEmpty' | trans}}',
                    "sInfoFiltered": '{{'datatable.common.sInfoFiltered' | trans}}',
                    "sInfoPostFix": '{{'datatable.common.sInfoPostFix' | trans}}',
                    "sSearch": '{{'datatable.common.sSearch' | trans}}',
                    "sLoadingRecords": '{{'datatable.common.sLoadingRecords' | trans}}',
                    "sUrl": "",
                    "oPaginate": {
                    "sFirst": '{{'datatable.common.sFirst' | trans}}',
                            "sPrevious": '{{'datatable.common.sPrevious' | trans}}',
                            "sNext": '{{'datatable.common.sNext' | trans}}',
                            "sLast": '{{'datatable.common.sLast' | trans}}'
                    }
            }
    };
            $.extend($defaults, $options);
            var oTable_{{ id | replace({'-': '_'}) }} = $('#{{ id }}').dataTable($defaults);
                {% if search %}
    $(".dataTables_filter").remove();
            var search_selector = "#{{id}} input[searchable=true]";
            $(search_selector).keypress(function (event) {
    var index = $(this).attr('index');
            var oTable = eval('oTable_{{id}}'.split('-').join('_'));
            if (event.keyCode == '13') {
    oTable.fnFilter(
            this.value,
            oTable.oApi._fnVisibleToColumnIndex(
                    oTable.fnSettings(),
                    index
                    )
            );
    }
    }).each(function (i) {
    this.initVal = this.value;
    }).focus(function () {
    if (this.className == "search_init"){
    this.className = "form-control";
            this.value = "";
    }
    }).blur(function (i) {
    if (this.value == ""){
    this.className = "search_init form-control";
            this.value = this.initVal;
    }
    });
        {% endif %}
    });
</script>

{% endif %}

{% endblock  %}

